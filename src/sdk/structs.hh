#pragma once

struct player_info_t {
	int64_t			pad0;

	union {
		int64_t		m_xuid;
		struct {
			int		m_xuid_low;
			int		m_xuid_high;
		};
	};

	char			m_name[128];
	int				m_user_id;
	char			m_guid[33];
	uint32_t		m_friends_id;
	char			m_friends_name[128];
	bool			m_fake_player;
	bool			m_is_hltv;
	uint32_t		m_custom_files[4];
	unsigned char	m_files_downloaded;
};

class c_cs_weapon_data {
public:
    char 	pad0[32];
    int 	m_max_clip;
    char 	pad1[204];
    char* 	m_name;
    char 	pad2[72];
    int 	m_weapon_type;
    char 	pad3[4];
    int 	m_price;
    char 	pad4[12];
    float 	m_cycle_time;
    char 	pad5[12];
    bool 	m_full_auto;
    char 	pad6[3];
    int 	m_damage;
    float 	m_headshot_multiplier;
    float 	m_armor_ratio;
    int 	m_bullets;
    float 	m_penetration;
	float 	m_flinch_velocity_modifier_large;
	float 	m_flinch_velocity_modifier_small;
	float 	m_range;
	float 	m_range_modifier;
	float 	m_throw_velocity;
	char 	pad8[12];
	bool 	m_silencer;
    char 	pad9[23];
    float 	m_max_speed;
	float 	m_max_speed_alt;
	char 	pad111[4];
	float 	m_spread;
	char 	pad112[16];
	float 	m_inaccuracy_stand;
	float	m_inaccuracy_stand_alt;
	char 	pad10[84];
    float 	m_recoil_magnitude;
    float 	m_recoil_magnitude_alt;
    char 	pad11[16];
    float   m_recovery_time_stand;
};

enum e_class_id {
	C_AI_BASE_NPC,
	C_WEAPON_AK47,
	C_BASE_ANIMATING,
	C_BASE_ANIMATING_OVERLAY,
	C_BASE_ATTRIBUTABLE_ITEM,
	C_BASE_BUTTON,
	C_BASE_COMBAT_CHARACTER,
	C_BASE_COMBAT_WEAPON,
	C_BASE_CS_GRENADE,
	C_BASE_CS_GRENADE_PROJECTILE,
	C_BASE_DOOR,
	C_BASE_ENTITY,
	C_BASE_FLEX,
	C_BASE_GRENADE,
	C_BASE_PARTICLE_ENTITY,
	C_BASE_PLAYER,
	C_BASE_PROP_DOOR,
	C_BASE_TEAM_OBJECTIVE_RESOURCE,
	C_BASE_TEMP_ENTITY,
	C_BASE_TOGGLE,
	C_BASE_TRIGGER,
	C_BASE_VIEWMODEL,
	C_BASE_VPHYSICS_TRIGGER,
	C_BASE_WEAPON_WORLD_MODEL,
	C_BEAM,
	C_BEAM_SPOTLIGHT,
	C_BONE_FOLLOWER,
	C_BR_C4_TARGET,
	C_BREACH_CHARGE,
	C_BREACH_CHARGE_PROJECTILE,
	C_BREAKABLE_PROP,
	C_BREAKABLE_SURFACE,
	C_BUMP_MINE,
	C_BUMP_MINE_PROJECTILE,
	C_C4,
	C_CASCADE_LIGHT,
	C_CHICKEN,
	C_COLOR_CORRECTION,
	C_COLOR_CORRECTION_VOLUME,
	C_CS_GAMERULES_PROXY,
	C_CS_PLAYER,
	C_CS_PLAYER_RESOURCE,
	C_CS_RAGDOLL,
	C_CS_TEAM,
	C_DANGERZONE,
	C_DANGERZONE_CONTROLLER,
	C_DEAGLE,
	C_DECOY_GRENADE,
	C_DECOY_PROJECTILE,
	C_DRONE,
	C_DRONE_GUN,
	C_DYNAMIC_LIGHT,
	C_DYNAMIC_PROP,
	C_ECON_ENTITY,
	C_ECON_WEARABLE,
	C_EMBERS,
	C_ENTITY_DISSOLVE,
	C_ENTITY_FLAME,
	C_ENTITY_FREEZING,
	C_ENTITY_PARTICLE_TRAIL,
	C_ENV_AMBIENT_LIGHT,
	C_ENV_DETAIL_CONTROLLER,
	C_ENV_DOF_CONTROLLER,
	C_ENV_GAS_CANISTER,
	C_ENV_PARTICLE_SCRIPT,
	C_ENV_PROJECTED_TEXTURE,
	C_ENV_QUADRATIC_BEAM,
	C_ENV_SCREEN_EFFECT,
	C_ENV_SCREEN_OVERLAY,
	C_ENV_TONEMAP_CONTROLLER,
	C_ENV_WIND,
	C_FE_PLAYER_DECAL,
	C_FIRECRACKER_BLAST,
	C_FIRE_SMOKE,
	C_FIRE_TRAIL,
	C_FISH,
	C_FISTS,
	C_FLASHBANG,
	C_FOG_CONTROLLER,
	C_FOOTSTEP_CONTROL,
	C_FUNC_DUST,
	C_FUNC_LOD,
	C_FUNC_AREA_PORTAL_WINDOW,
	C_FUNC_BRUSH,
	C_FUNC_CONVEYOR,
	C_FUNC_LADDER,
	C_FUNC_MONITOR,
	C_FUNC_MOVE_LINEAR,
	C_FUNC_OCCLUDER,
	C_FUNC_REFLECTIVE_GLASS,
	C_FUNC_ROTATING,
	C_FUNC_SMOKE_VOLUME,
	C_FUNC_TRACK_TRAIN,
	C_GAMERULES_PROXY,
	C_GRASS_BURN,
	C_HANDLE_TEST,
	C_HE_GRENADE,
	C_HOSTAGE,
	C_HOSTAGE_CARRIABLE_PROP,
	C_INCENDIARY_GRENADE,
	C_INFERNO,
	C_INFO_LADDER_DISMOUNT,
	C_INFO_MAP_REGION,
	C_INFO_OVERLAY_ACCESSOR,
	C_ITEM_HEALTHSHOT,
	C_ITEM_CASH,
	C_ITEM_DOGTAGS,
	C_KNIFE,
	C_KNIFE_GG,
	C_LIGHT_GLOW,
	C_MAP_VETO_PICK_CONTROLLER,
	C_MATERIAL_MODIFY_CONTROL,
	C_MELEE,
	C_MOLOTOV_GRENADE,
	C_MOLOTOV_PROJECTILE,
	C_MOVIE_DISPLAY,
	C_PARADROP_CHOPPER,
	C_PARTICLE_FIRE,
	C_PARTICLE_PERFORMANCE_MONITOR,
	C_PARTICLE_SYSTEM,
	C_PHYS_BOX,
	C_PHYS_BOX_MULTIPLAYER,
	C_PHYSICS_PROP,
	C_PHYSICS_PROP_MULTIPLAYER,
	C_PHYS_MAGNET,
	C_PHYS_PROP_AMMO_BOX,
	C_PHYS_PROP_LOOT_CRATE,
	C_PHYS_PROP_RADAR_JAMMER,
	C_PHYS_PROP_WEAPON_UPGRADE,
	C_PLANTED_C4,
	C_PLASMA,
	C_PLAYER_PING,
	C_PLAYER_RESOURCE,
	C_POINT_CAMERA,
	C_POINT_COMMENT_ARYNODE,
	C_POINT_WORLD_TEXT,
	C_POSE_CONTROLLER,
	C_POST_PROCESS_CONTROLLER,
	C_PRECIPITATION,
	C_PRECIPITATION_BLOCKER,
	C_PREDICTED_VIEW_MODEL,
	C_PROP_HALLUCINATION,
	C_PROP_COUNTER,
	C_PROP_DOOR_ROTATING,
	C_PROP_JEEP,
	C_PROP_VEHICLE_DRIVEABLE,
	C_RAGDOLL_MANAGER,
	C_RAGDOLL_PROP,
	C_RAGDOLL_PROP_ATTACHED,
	C_ROPE_KEYFRAME,
	C_WEAPON_SCAR17,
	C_SCENE_ENTITY,
	C_SENSOR_GRENADE,
	C_SENSOR_GRENADE_PROJECTILE,
	C_SHADOW_CONTROL,
	C_SLIDE_SHOW_DISPLAY,
	C_SMOKE_GRENADE,
	C_SMOKE_GRENADE_PROJECTILE,
	C_SMOKE_STACK,
	C_SNOWBALL,
	C_SNOWBALL_PILE,
	C_SNOWBALL_PROJECTILE,
	C_SPATIAL_ENTITY,
	C_SPOTLIGHT_END,
	C_SPRITE,
	C_SPRITE_ORIENTED,
	C_SPRITE_TRAIL,
	C_STATUE_PROP,
	C_STEAMJET,
	C_SUN,
	C_SUNLIGHT_SHADOW_CONTROL,
	C_SURVIVAL_SPAWN_CHOPPER,
	C_TABLET,
	C_TEAM,
	C_TEAM_PLAYROUND_BASED_RULES_PROXY,
	C_TEAR_MORRICOCHET,
	C_TE_BASE_BEAM,
	C_TE_BEAM_ENT_POINT,
	C_TE_BEAM_ENTS,
	C_TE_BEAM_FOLLOW,
	C_TE_BEAM_LASER,
	C_TE_BEAM_POINTS,
	C_TE_BEAM_RING,
	C_TE_BEAM_RING_POINT,
	C_TE_BEAM_SPLINE,
	C_TE_BLOOD_SPRITE,
	C_TE_BLOOD_STREAM,
	C_TE_BREAK_MODEL,
	C_TE_BSP_DECAL,
	C_TE_BUBBLES,
	C_TE_BUBBLE_TRAIL,
	C_TE_CLIENT_PROJECTILE,
	C_TE_DECAL,
	C_TE_DUST,
	C_TE_DYNAMIC_LIGHT,
	C_TE_EFFECT_DISPATCH,
	C_TE_ENERGY_SPLASH,
	C_TE_EXPLOSION,
	C_TE_FIRE_BULLETS,
	C_TE_FIZZ,
	C_TE_FOOTPRINT_DECAL,
	C_TE_FOUNDRY_HELPERS,
	C_TE_GAUSS_EXPLOSION,
	C_TE_GLOW_SPRITE,
	C_TE_IMPACT,
	C_TE_KILL_PLAYER_ATTACHMENTS,
	C_TE_LARGE_FUNNEL,
	C_TE_METAL_SPARKS,
	C_TE_MUZZLE_FLASH,
	C_TE_PARTICLE_SYSTEM,
	C_TE_PHYSICS_PROP,
	C_TE_PLANT_BOMB,
	C_TE_PLAYER_ANIM_EVENT,
	C_TE_PLAYER_DECAL,
	C_TE_PROJECTED_DECAL,
	C_TE_RADIOICON,
	C_TE_SHATTER_SURFACE,
	C_TE_SHOW_LINE,
	C_TE_SLA,
	C_TE_SMOKE,
	C_TE_SPARKS,
	C_TE_SPRITE,
	C_TE_SPRITE_SPRAY,
	C_TEST_PROXY_TOGGLE_NETWORKABLE,
	C_TEST_TRACE_LINE,
	C_TE_WORLD_DECAL,
	C_TRIGGER_PLAYER_MOVEMENT,
	C_TRIGGER_SOUND_OPERATOR,
	C_VGUI_SCREEN,
	C_VOTE_CONTROLLER,
	C_WATER_BULLET,
	C_WATER_LOD_CONTROL,
	C_WEAPON_AUG,
	C_WEAPON_AWP,
	C_WEAPON_BASE_ITEM,
	C_WEAPON_PPBIZON,
	C_WEAPON_CS_BASE,
	C_WEAPON_CS_BASE_GUN,
	C_WEAPON_CYCLER,
	C_WEAPON_DUAL_BERETTAS,
	C_WEAPON_FAMAS,
	C_WEAPON_FIVESEVEN,
	C_WEAPON_G3SG1,
	C_WEAPON_GALIL,
	C_WEAPON_GALIL_AR,
	C_WEAPON_GLOCK18,
	C_WEAPON_P2000,
	C_WEAPON_M249,
	C_WEAPON_M3,
	C_WEAPON_M4A4,
	C_WEAPON_MAC10,
	C_WEAPON_MAG7,
	C_WEAPON_MP5SD,
	C_WEAPON_MP7,
	C_WEAPON_MP9,
	C_WEAPON_NEGEV,
	C_WEAPON_NOVA,
	C_WEAPON_P228,
	C_WEAPON_P250,
	C_WEAPON_P90,
	C_WEAPON_SAWEDOFF,
	C_WEAPON_SCAR20,
	C_WEAPON_SCOUT,
	C_WEAPON_SG550,
	C_WEAPON_SG552,
	C_WEAPON_SG553,
	C_WEAPON_BALLISTIC_SHIELD,
	C_WEAPON_SSG08,
	C_WEAPON_ZEUSX27,
	C_WEAPON_TEC9,
	C_WEAPON_TMP,
	C_WEAPON_UMP45,
	C_WEAPON_USP,
	C_WEAPON_XM1014,
	C_WORLD,
	C_WORLD_VGUI_TEXT,
	DUST_TRAIL,
	MOVIE_EXPLOSION,
	PARTICLE_SMOKE_GRENADE,
	ROCKET_TRAIL,
	SMOKE_TRAIL,
	SPORE_EXPLOSION,
	SPORE_TRAIL
};

enum e_item_definition_index : short {
	WEAPON_NONE = 0,
	WEAPON_DESERT_EAGLE,
	WEAPON_DUAL_BERETTAS,
	WEAPON_FIVESEVEN,
	WEAPON_GLOCK18,
	WEAPON_AK47 = 7,
	WEAPON_AUG,
	WEAPON_AWP,
	WEAPON_FAMAS,
	WEAPON_G3SG1,
	WEAPON_GALIL_AR = 13,
	WEAPON_M249,
	WEAPON_M4A4 = 16,
	WEAPON_MAC10,
	WEAPON_P90 = 19,
	WEAPON_REPULSOR_DEVICE,
	WEAPON_MP5SD = 23,
	WEAPON_UMP45,
	WEAPON_XM1014,
	WEAPON_PPBIZON,
	WEAPON_MAG7,
	WEAPON_NEGEV,
	WEAPON_SAWEDOFF,
	WEAPON_TEC9,
	WEAPON_ZEUS_X27,
	WEAPON_P2000,
	WEAPON_MP7,
	WEAPON_MP9,
	WEAPON_NOVA,
	WEAPON_P250,
	WEAPON_BALLISTIC_SHIELD,
	WEAPON_SCAR20,
	WEAPON_SG_553,
	WEAPON_SSG_08,
	WEAPON_KNIFE_GOLD,
	WEAPON_KNIFE_DEFAULT_CT,
	WEAPON_GRENADE_FLASHBANG,
	WEAPON_GRENADE_HE,
	WEAPON_GRENADE_SMOKE,
	WEAPON_GRENADE_MOLOTOV,
	WEAPON_GRENADE_DECOY,
	WEAPON_GRENADE_INCENDIARY,
	WEAPON_C4,
	ITEM_KEVLAR,
	ITEM_KEVLAR_HELMET,
	ITEM_HEAVY_ASSAULT_SUIT,
	ITEM_DEFUSE_KIT = 55,
	ITEM_RESCUE_KIT,
	WEAPON_MEDISHOT,
	WEAPON_KNIFE_DEFAULT_T = 59,
	WEAPON_M4A1S,
	WEAPON_USPS,
	WEAPON_CZ75A = 63,
	WEAPON_R8_REVOLVER,
	WEAPON_GRENADE_TA = 68,
	WEAPON_BARE_HANDS,
	WEAPON_BREACH_CHARGE,
	WEAPON_TABLET = 72,
	WEAPON_MELEE = 74,
	WEAPON_AXE,
	WEAPON_HAMMER,
	WEAPON_WRENCH = 78,
	WEAPON_KNIFE_SPECTRAL_SHIV = 80,
	WEAPON_GRENADE_FIRE_BOMB,
	WEAPON_GRENADE_DIVERSION_DEVICE,
	WEAPON_GRENADE_FRAG,
	WEAPON_SNOWBALL,
	WEAPON_BUMP_MINE,
	WEAPON_KNIFE_BAYONET = 500,
	WEAPON_KNIFE_CLASSIC = 503,
	WEAPON_KNIFE_FLIP = 505,
	WEAPON_KNIFE_GUT,
	WEAPON_KNIFE_KARAMBIT,
	WEAPON_KNIFE_M9_BAYONET,
	WEAPON_KNIFE_HUNTSMAN,
	WEAPON_KNIFE_FALCHION = 512,
	WEAPON_KNIFE_BOWIE = 514,
	WEAPON_KNIFE_BUTTERFLY,
	WEAPON_KNIFE_SHADOW_DAGGERS,
	WEAPON_KNIFE_PARACORD,
	WEAPON_KNIFE_SURVIVAL,
	WEAPON_KNIFE_URSUS,
	WEAPON_KNIFE_NAVAJA,
	WEAPON_KNIFE_NOMAD,
	WEAPON_KNIFE_STILETTO,
	WEAPON_KNIFE_TALON,
	WEAPON_KNIFE_SKELETON = 525,
	GLOVE_BROKENFANG = 4725,
	GLOVE_BLOODHOUND = 5027,
	GLOVE_DEFAULT_T,
	GLOVE_DEFAULT_CT,
	GLOVE_SPORT,
	GLOVE_DRIVER,
	GLOVE_HAND_WRAPS,
	GLOVE_MOTO,
	GLOVE_SPECIALIST,
	GLOVE_HYDRA,
	AGENT_T_MAP_BASED,
	AGENT_CT_MAP_BASED,
	AGENT_T_ANARCHIST,
	AGENT_T_ANARCHIST_A,
	AGENT_T_ANARCHIST_B,
	AGENT_T_ANARCHIST_C,
	AGENT_T_ANARCHIST_D,
	AGENT_T_PIRATE,
	AGENT_T_PIRATE_A,
	AGENT_T_PIRATE_B,
	AGENT_T_PIRATE_C,
	AGENT_T_PIRATE_D,
	AGENT_T_PROFESSIONAL,
	AGENT_T_PROFESSIONAL_A,
	AGENT_T_PROFESSIONAL_B,
	AGENT_T_PROFESSIONAL_C,
	AGENT_T_PROFESSIONAL_D,
	AGENT_T_SEPARATIST,
	AGENT_T_SEPARATIST_A,
	AGENT_T_SEPARATIST_B,
	AGENT_T_SEPARATIST_C,
	AGENT_T_SEPARATIST_D,
	AGENT_CT_GIGN,
	AGENT_CT_GIGN_A,
	AGENT_CT_GIGN_B,
	AGENT_CT_GIGN_C,
	AGENT_CT_GIGN_D,
	AGENT_CT_GSG9,
	AGENT_CT_GSG9_A,
	AGENT_CT_GSG9_B,
	AGENT_CT_GSG9_C,
	AGENT_CT_GSG9_D,
	AGENT_CT_IDF,
	AGENT_CT_IDF_B,
	AGENT_CT_IDF_C,
	AGENT_CT_IDF_D,
	AGENT_CT_IDF_E,
	AGENT_CT_IDF_F,
	AGENT_CT_SWAT,
	AGENT_CT_SWAT_A,
	AGENT_CT_SWAT_B,
	AGENT_CT_SWAT_C,
	AGENT_CT_SWAT_D,
	AGENT_CT_SAS_A,
	AGENT_CT_SAS_B,
	AGENT_CT_SAS_C,
	AGENT_CT_SAS_D,
	AGENT_CT_ST6,
	AGENT_CT_ST6_A,
	AGENT_CT_ST6_B,
	AGENT_CT_ST6_C,
	AGENT_CT_ST6_D,
	AGENT_T_BALKAN,
	AGENT_T_BALKAN_A,
	AGENT_T_BALKAN_B,
	AGENT_T_BALKAN_C,
	AGENT_T_BALKAN_D,
	AGENT_T_JUMPSUIT_A,
	AGENT_T_JUMPSUIT_B,
	AGENT_T_JUMPSUIT_C,
	AGENT_T_HEAVY,
	AGENT_CT_HEAVY,
	AGENT_T_LEET_A = 5100,
	AGENT_T_LEET_B,
	AGENT_T_LEET_C,
	AGENT_T_LEET_D,
	AGENT_T_LEET_E,
	AGENT_T_ELITE_CREW_GROUND_REBEL,
	AGENT_T_ELITE_CREW_OSIRIS,
	AGENT_T_ELITE_CREW_PROF_SHAHMAT,
	AGENT_T_ELITE_CREW_MR_MUHLIK,
	AGENT_T_PHOENIX = 5200,
	AGENT_T_PHOENIX_A,
	AGENT_T_PHOENIX_B,
	AGENT_T_PHOENIX_C,
	AGENT_T_PHOENIX_D,
	AGENT_T_PHOENIX_SOLDIER,
	AGENT_T_PHOENIX_ENFORCER,
	AGENT_T_PHOENIX_SLINGSHOT,
	AGENT_T_PHOENIX_I,
	AGENT_CT_FBI = 5300,
	AGENT_CT_FBI_A,
	AGENT_CT_FBI_C,
	AGENT_CT_FBI_D,
	AGENT_CT_FBI_E,
	AGENT_CT_FBI_F,
	AGENT_CT_FBI_G,
	AGENT_CT_FBI_H,
	AGENT_CT_FBI_B,
	AGENT_CT_ST6_K = 5400,
	AGENT_CT_ST6_E,
	AGENT_CT_ST6_G,
	AGENT_CT_ST6_M,
	AGENT_CT_ST6_I,
	AGENT_CT_ST6_J = 4619,
	AGENT_CT_ST6_L = 4680,
	AGENT_T_BALKAN_F = 5500,
	AGENT_T_BALKAN_I,
	AGENT_T_BALKAN_G,
	AGENT_T_BALKAN_J,
	AGENT_T_BALKAN_H,
	AGENT_T_BALKAN_K = 4718,
	AGENT_T_BALKAN_L = 5505,
	AGENT_CT_SAS = 5600,
	AGENT_CT_SAS_B_SQUADRON_OFFICER,
	AGENT_CT_SWAT_E = 4711,
	AGENT_CT_SWAT_F,
	AGENT_CT_SWAT_G,
	AGENT_CT_SWAT_H,
	AGENT_CT_SWAT_I,
	AGENT_CT_SWAT_J,
	AGENT_T_PROFESSIONAL_E = 4726,
	AGENT_T_PROFESSIONAL_F_1 = 4733,
	AGENT_T_PROFESSIONAL_F_2,
	AGENT_T_PROFESSIONAL_F_3,
	AGENT_T_PROFESSIONAL_F_4,
	AGENT_T_PROFESSIONAL_G = 4727,
	AGENT_T_PROFESSIONAL_H,
	AGENT_T_PROFESSIONAL_I = 4732,
	AGENT_T_PROFESSIONAL_J = 4730,
};

enum e_cs_weapon_type {
	WEAPON_TYPE_KNIFE,
	WEAPON_TYPE_PISTOL,
	WEAPON_TYPE_SMG,
	WEAPON_TYPE_RIFLE,
	WEAPON_TYPE_SHOTGUN,
	WEAPON_TYPE_SNIPER,
	WEAPON_TYPE_MACHINE_GUN,
	WEAPON_TYPE_C4,
	WEAPON_TYPE_PLACE_HOLDER,
	WEAPON_TYPE_GRENADE,
	WEAPON_TYPE_UNKNOWN,
	WEAPON_TYPE_MEDISHOT,
	WEAPON_TYPE_FISTS,
	WEAPON_TYPE_BREACH_CHARGE,
	WEAPON_TYPE_BUMP_MINE,
	WEAPON_TYPE_TABLET,
	WEAPON_TYPE_MELEE
};

enum e_move_type {
	MOVE_TYPE_NONE,
	MOVE_TYPE_ISOMETRIC,
	MOVE_TYPE_WALK,
	MOVE_TYPE_STEP,
	MOVE_TYPE_FLY,
	MOVE_TYPE_FLYGRAVITY,
	MOVE_TYPE_VPHYSICS,
	MOVE_TYPE_PUSH,
	MOVE_TYPE_NOCLIP,
	MOVE_TYPE_LADDER,
	MOVE_TYPE_OBSERVER,
	MOVE_TYPE_CUSTOM
};

enum e_client_frame_stage {
	FRAME_UNDEFINED = -1,
	FRAME_START,
	FRAME_NET_UPDATE_START,
	FRAME_NET_UPDATE_POSTDATAUPDATE_START,
	FRAME_NET_UPDATE_POSTDATAUPDATE_END,
	FRAME_NET_UPDATE_END,
	FRAME_RENDER_START,
	FRAME_RENDER_END
};

enum e_entity_flags {
	FL_ONGROUND			= (1 << 0),
	FL_DUCKING			= (1 << 1),
	FL_DUCKING_ANIM		= (1 << 2),
	FL_WATER_JUMP		= (1 << 3),
	FL_ON_TRAIN			= (1 << 4),
	FL_IN_RAIN			= (1 << 5),
	FL_FROZEN			= (1 << 6),
	FL_AT_CONTROLS		= (1 << 7),
	FL_CLIENT			= (1 << 8),
	FL_FAKE_CLIENT		= (1 << 9),
	FL_IN_WATER			= (1 << 10),
	FL_FLY				= (1 << 11),
	FL_SWIM				= (1 << 12),
	FL_CONVEYOR			= (1 << 13),
	FL_NPC				= (1 << 14),
	FL_GODMODE			= (1 << 15),
	FL_NO_TARGET		= (1 << 16),
	FL_AIM_TARGET		= (1 << 17),
	FL_PARTIAL_GROUND	= (1 << 18),
	FL_STATIC_PROP		= (1 << 19),
	FL_GRAPHED			= (1 << 20),
	FL_GRENADE			= (1 << 21),
	FL_STEP_MOVEMENT	= (1 << 22),
	FL_DONT_TOUCH		= (1 << 23),
	FL_BASE_VELOCITY	= (1 << 24),
	FL_WORLD_BRUSH		= (1 << 25),
	FL_OBJECT			= (1 << 26),
	FL_KILL_ME			= (1 << 27),
	FL_ON_FIRE			= (1 << 28),
	FL_DISSOLVING		= (1 << 29),
	FL_RAGDOLL			= (1 << 30),
	FL_UNBLOCKABLE		= (1 << 31)
};

enum e_life_state {
	LIFE_ALIVE,
	LIFE_DYING,
	LIFE_DEAD,
	LIFE_RESPAWNABLE,
	LIFE_DISCARDBODY
};

enum e_observer_mode {
	OBS_MODE_NONE,
	OBS_MODE_DEATHCAM,
	OBS_MODE_FREEZECAM,
	OBS_MODE_FIXED,
	OBS_MODE_IN_EYE,
	OBS_MODE_CHASE,
	OBS_MODE_POI,
	OBS_MODE_ROAMING
};

enum e_team_id {
	TEAM_UNASSIGNED,
	TEAM_SPECTATOR,
	TEAM_TERRORIST,
	TEAM_COUNTER_TERRORIST
};

enum e_override_type {
	OVERRIDE_NORMAL,
	OVERRIDE_BUILD_SHADOWS,
	OVERRIDE_DEPTH_WRITE,
	OVERRIDE_SSAO_DEPTH_WRITE,
};

enum e_trace_type {
	TRACE_EVERYTHING,
	TRACE_WORLD_ONLY,
	TRACE_ENTITIES_ONLY,
	TRACE_EVERYTHING_FILTER_PROPS
};

enum e_effects {
	EF_BONE_MERGE			= (1 << 0),
	EF_BRIGHT_LIGHT			= (1 << 1),
	EF_DIMLIGHT				= (1 << 2),
	EF_NO_INTERP			= (1 << 3),
	EF_NO_SHADOW			= (1 << 4),
	EF_NO_DRAW				= (1 << 5),
	EF_NO_RECEIVE_SHADOW	= (1 << 6),
	EF_BONEMERGE_FASTCULL	= (1 << 7),
	EF_ITEM_BLINK			= (1 << 8),
	EF_PARENT_ANIMATES		= (1 << 9),
	EF_FAST_REFLECTION		= (1 << 10),
	EF_NO_SHADOWDEPTH		= (1 << 11),
	EF_NO_SHADOWDEPTH_CACHE = (1 << 12),
	EF_NO_FLASHLIGHT		= (1 << 13),
	EF_NO_CSM				= (1 << 14)
};

enum e_eflags {
	EFL_KILLME 								= (1 << 0),
	EFL_DORMANT 							= (1 << 1),
	EFL_NOCLIP_ACTIVE 						= (1 << 2),
	EFL_SETTING_UP_BONES 					= (1 << 3),
	EFL_KEEP_ON_RECREATE_ENTITIES			= (1 << 4),
	EFL_HAS_PLAYER_CHILD 					= (1 << 4),
	EFL_DIRTY_SHADOWUPDATE 					= (1 << 5),
	EFL_NOTIFY 								= (1 << 6),
	EFL_FORCE_CHECK_TRANSMIT 				= (1 << 7),
	EFL_BOT_FROZEN 							= (1 << 8),
	EFL_SERVER_ONLY 						= (1 << 9),
	EFL_NO_AUTO_EDICT_ATTACH 				= (1 << 10),
	EFL_DIRTY_ABSTRANSFORM 					= (1 << 11),
	EFL_DIRTY_ABSVELOCITY 					= (1 << 12),
	EFL_DIRTY_ABSANGVELOCITY 				= (1 << 13),
	EFL_DIRTY_SURROUNDING_COLLISION_BOUNDS 	= (1 << 14),
	EFL_DIRTY_SPATIAL_PARTITION 			= (1 << 15),
	EFL_IN_SKYBOX 							= (1 << 17),
	EFL_USE_PARTITION_WHEN_NOT_SOLID 		= (1 << 18),
	EFL_TOUCHING_FLUID 						= (1 << 19),
	EFL_IS_BEING_LIFTED_BY_BARNACLE 		= (1 << 20),
	EFL_NO_ROTORWASH_PUSH 					= (1 << 21),
	EFL_NO_THINK_FUNCTION 					= (1 << 22),
	EFL_NO_GAME_PHYSICS_SIMULATION 			= (1 << 23),
	EFL_CHECK_UNTOUCH 						= (1 << 24),
	EFL_DONTBLOCKLOS 						= (1 << 25),
	EFL_DONTWALKON 							= (1 << 26),
	EFL_NO_DISSOLVE 						= (1 << 27),
	EFL_NO_MEGAPHYSCANNON_RAGDOLL 			= (1 << 28),
	EFL_NO_WATER_VELOCITY_CHANGE 			= (1 << 29),
	EFL_NO_PHYSCANNON_INTERACTION 			= (1 << 30),
	EFL_NO_DAMAGE_FORCES 					= (1 << 31)
};

enum e_hitgroups {
	HITGROUP_GENERIC,
	HITGROUP_HEAD,
	HITGROUP_CHEST,
	HITGROUP_STOMACH,
	HITGROUP_LEFT_ARM,
	HITGROUP_RIGHT_ARM,
	HITGROUP_LEFT_LEG,
	HITGROUP_RIGHT_LEG,
	HITGROUP_GEAR = 10
};

enum e_hitboxes {
	HITBOX_HEAD,
	HITBOX_NECK,
	HITBOX_PELVIS,
	HITBOX_STOMACH,
	HITBOX_LOWER_CHEST,
	HITBOX_CHEST,
	HITBOX_UPPER_CHEST,
	HITBOX_RIGHT_THIGH,
	HITBOX_LEFT_THIGH,
	HITBOX_RIGHT_CALF,
	HITBOX_LEFT_CALF,
	HITBOX_RIGHT_FOOT,
	HITBOX_LEFT_FOOT,
	HITBOX_RIGHT_HAND,
	HITBOX_LEFT_HAND,
	HITBOX_RIGHT_UPPER_ARM,
	HITBOX_RIGHT_FOREARM,
	HITBOX_LEFT_UPPER_ARM,
	HITBOX_LEFT_FOREARM
};

enum e_solid_type {
	SOLID_NONE,
	SOLID_BSP,
	SOLID_BBOX,
	SOLID_OBB,
	SOLID_OBB_YAW,
	SOLID_CUSTOM,
	SOLID_VPHYSICS,
	SOLID_LAST
};

enum e_studio_flags {
	STUDIO_NONE,
	STUDIO_RENDER							= (1 << 0),
	STUDIO_VIEW_XFORM_ATTACHMENTS			= (1 << 1),
	STUDIO_DRAW_TRANSLUCENT_SUBMODELS		= (1 << 2),
	STUDIO_TWO_PASS							= (1 << 3),
	STUDIO_STATIC_LIGHTING					= (1 << 4),
	STUDIO_WIREFRAME						= (1 << 5),
	STUDIO_ITEM_BLINK						= (1 << 6),
	STUDIO_NOSHADOWS						= (1 << 7),
	STUDIO_WIREFRAME_VCOLLIDE				= (1 << 8),
	STUDIO_NOLIGHTING_OR_CUBEMAP			= (1 << 9),
	STUDIO_SKIP_FLEXES						= (1 << 10),
	STUDIO_DONT_MODIFY_STENCIL_STATE		= (1 << 11),
	STUDIO_DEPTH_ONLY						= (1 << 24),
	STUDIO_AO_PREPASS_TEXTURE				= (1 << 25),
	STUDIO_KEEP_SHADOWS						= (1 << 26),
	STUDIO_SSAO_DEPTH_TEXTURE				= (1 << 27),
	STUDIO_SKIP_DECALS						= (1 << 28),
	STUDIO_SHADOW_TEXTURE					= (1 << 29),
	STUDIO_SHADOW_DEPTH_TEXTURE				= (1 << 30),
	STUDIO_TRANSPARENCY						= (1 << 31),
};

enum e_material_flags {
    MATERIAL_VAR_DEBUG                = (1 << 0),
    MATERIAL_VAR_NO_DEBUG_OVERRIDE    = (1 << 1),
    MATERIAL_VAR_NO_DRAW              = (1 << 2),
    MATERIAL_VAR_USE_IN_FILLRATE_MODE = (1 << 3),

    MATERIAL_VAR_VERTEXCOLOR  = (1 << 4),
    MATERIAL_VAR_VERTEXALPHA  = (1 << 5),
    MATERIAL_VAR_SELFILLUM    = (1 << 6),
    MATERIAL_VAR_ADDITIVE     = (1 << 7),
    MATERIAL_VAR_ALPHATEST    = (1 << 8),
    MATERIAL_VAR_ZNEARER      = (1 << 10),
    MATERIAL_VAR_MODEL        = (1 << 11),
    MATERIAL_VAR_FLAT         = (1 << 12),
    MATERIAL_VAR_NOCULL       = (1 << 13),
    MATERIAL_VAR_NOFOG        = (1 << 14),
    MATERIAL_VAR_IGNOREZ      = (1 << 15),
    MATERIAL_VAR_DECAL        = (1 << 16),
    MATERIAL_VAR_ENVMAPSPHERE = (1 << 17),

    MATERIAL_VAR_ENVMAPCAMERASPACE        = (1 << 19),
    MATERIAL_VAR_BASEALPHAENVMAPMASK      = (1 << 20),
    MATERIAL_VAR_TRANSLUCENT              = (1 << 21),
    MATERIAL_VAR_NORMALMAPALPHAENVMAPMASK = (1 << 22),
    MATERIAL_VAR_NEEDS_SOFTWARE_SKINNING  = (1 << 23),
    MATERIAL_VAR_OPAQUETEXTURE            = (1 << 24),
    MATERIAL_VAR_ENVMAPMODE               = (1 << 25),
    MATERIAL_VAR_SUPPRESS_DECALS          = (1 << 26),
    MATERIAL_VAR_HALFLAMBERT              = (1 << 27),
    MATERIAL_VAR_WIREFRAME                = (1 << 28),
    MATERIAL_VAR_ALLOWALPHATOCOVERAGE     = (1 << 29),
    MATERIAL_VAR_ALPHA_MODIFIED_BY_PROXY  = (1 << 30),
    MATERIAL_VAR_VERTEXFOG                = (1 << 31),
};

enum e_buttons {
	IN_ATTACK      = (1 << 0),
	IN_JUMP        = (1 << 1),
	IN_DUCK        = (1 << 2),
	IN_FORWARD     = (1 << 3),
	IN_BACK        = (1 << 4),
	IN_USE         = (1 << 5),
	IN_CANCEL      = (1 << 6),
	IN_LEFT        = (1 << 7),
	IN_RIGHT       = (1 << 8),
	IN_MOVELEFT    = (1 << 9),
	IN_MOVERIGHT   = (1 << 10),
	IN_ATTACK2     = (1 << 11),
	IN_RUN         = (1 << 12),
	IN_RELOAD      = (1 << 13),
	IN_ALT1        = (1 << 14),
	IN_ALT2        = (1 << 15),
	IN_SCORE       = (1 << 16),
	IN_SPEED       = (1 << 17),
	IN_WALK        = (1 << 18),
	IN_ZOOM        = (1 << 19),
	IN_WEAPON1     = (1 << 20),
	IN_WEAPON2     = (1 << 21),
	IN_BULLRUSH    = (1 << 22),
	IN_GRENADE1    = (1 << 23),
	IN_GRENADE2    = (1 << 24),
	IN_SPINLOOK    = (1 << 25)
};

enum e_pitch_types {
	PITCH_NORM	= 100,
	PITCH_LOW	= 95,
	PITCH_HIGH	= 120
};

enum e_render_flags: unsigned int {
	RENDER_FLAGS_DISABLE_RENDERING 		 = 0x01,
	RENDER_FLAGS_HASCHANGED 			 = 0x02,
	RENDER_FLAGS_ALTERNATE_SORTING 		 = 0x04,
	RENDER_FLAGS_RENDER_WITH_VIEWMODELS  = 0x08,
	RENDER_FLAGS_BLOAT_BOUNDS 			 = 0x10,
	RENDER_FLAGS_BOUNDS_VALID 			 = 0x20,
	RENDER_FLAGS_BOUNDS_ALWAYS_RECOMPUTE = 0x40,
	RENDER_FLAGS_IS_SPRITE 				 = 0x80,
	RENDER_FLAGS_FORCE_OPAQUE_PASS 		 = 0x100
};

enum e_bone_flags {
	BONE_FLAG_PHYSICALLY_SIMULATED 	= (1 << 0),
	BONE_FLAG_PHYSICS_PROCEDURAL 	= (1 << 1),
	BONE_FLAG_ALWAYS_PROCEDURAL 	= (1 << 2),
	BONE_FLAG_SCREEN_ALIGN_SPHERE 	= (1 << 3),
	BONE_FLAG_SCREEN_ALIGN_CYLINDER = (1 << 4),
	BONE_FLAG_CALCULATE_MASK 		= (1 << 5) - BONE_FLAG_PHYSICALLY_SIMULATED,
	BONE_FLAG_USED_BY_HITBOX 		= (1 << 8),
	BONE_FLAG_USED_BY_ATTACHMENT 	= (1 << 9),
	BONE_FLAG_USED_BY_VERTEX_LOD0 	= (1 << 10),
	BONE_FLAG_USED_BY_VERTEX_LOD1 	= (1 << 11),
	BONE_FLAG_USED_BY_VERTEX_LOD2 	= (1 << 12),
	BONE_FLAG_USED_BY_VERTEX_LOD3 	= (1 << 13),
	BONE_FLAG_USED_BY_VERTEX_LOD4 	= (1 << 14),
	BONE_FLAG_USED_BY_VERTEX_LOD5 	= (1 << 15),
	BONE_FLAG_USED_BY_VERTEX_LOD6 	= (1 << 16),
	BONE_FLAG_USED_BY_VERTEX_LOD7 	= (1 << 17),
	BONE_FLAG_USED_BY_BONE_MERGE 	= (1 << 18),
	BONE_FLAG_USED_BY_VERTEX_MASK 	= (BONE_FLAG_USED_BY_BONE_MERGE - BONE_FLAG_USED_BY_VERTEX_LOD0),
	BONE_FLAG_USED_BY_ANYTHING 		= (1 << 19) - BONE_FLAG_USED_BY_HITBOX,
	BONE_FLAG_USED_MASK 			= (1 << 19) - BONE_FLAG_USED_BY_HITBOX,
	BONE_FLAG_FIXED_ALIGNMENT 		= (1 << 20),
	BONE_FLAG_HAS_SAVEFRAME_POS 	= (1 << 21),
	BONE_FLAG_HAS_SAVEFRAME_ROT64 	= (1 << 22),
	BONE_FLAG_HAS_SAVEFRAME_ROT32 	= (1 << 23),
	BONE_FLAG_TYPE_MASK 			= 0x00F00000
};

enum e_game_type {
	GAME_TYPE_UNKNOWN = -1,
	GAME_TYPE_CLASSIC,
	GAME_TYPE_GUNGAME,
	GAME_TYPE_TRAINING,
	GAME_TYPE_CUSTOM,
	GAME_TYPE_COOPERATIVE,
	GAME_TYPE_SKIRMISH,
	GAME_TYPE_FREEFORALL
};

enum e_game_mode {
	GAME_MODE_UNKNOWN,
	GAME_MODE_CASUAL,
	GAME_MODE_COMPETITIVE,
	GAME_MODE_WINGMAN,
	GAME_MODE_ARMSRACE,
	GAME_MODE_DEMOLITION,
	GAME_MODE_DEATHMATCH,
	GAME_MODE_GUARDIAN,
	GAME_MODE_COOPSTRIKE,
	GAME_MODE_DANGERZONE
};